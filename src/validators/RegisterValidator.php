<?php


namespace Validator;


use Contoller\Http\Request;

class RegisterValidator extends ValidatorCustumer
{
    /**
     * @var string[]
     */
    protected $errorsMessages = [
        'required' => ':attribute obligatoire.',
        'numeric' => ':attribute invalide.',
        'min' => ':attribute invalide',
        'phone' => ':attribute invalide.',
        "name" => ":attribute invalide ex causes(espace a la fin ).",
        "unique" => ":attribute est deja utilisÃ©.",
        "emailApi" => "l' :attribute est invalide."
    ];
    /**
     * @var string[]
     */
    protected $rules = [
        'nom' => 'required|min:2|name',
        'prenom' => 'required|min:2|name',
        'contact' => 'required|numeric|phone|unique:membre,contact',
        "email" => "required|emailApi|unique:membre,email"
    ];

    public function makeValidate()
    {
        // TODO: Change the autogenerated stub
        Request::sleepRequest(1);
        $request = new Request();
        $this->processInputsData();
        $inputs = $request->inputs();
        if (!empty($request->inputs())) {
            $validate = $this->validateCustermer($inputs);
            if ($validate->fails()) {
                $errors = $validate->errors()->firstOfAll();
                $this->custumErrorMessages($errors);
                $errors['inputs'] = true;
                (Request::isAjax()) ? Request::ajax($errors, 400) : Request::setErrors($errors);
            }
        }
    }

    /**
     * @return void
     */
    private function processInputsData()
    {
        if (isset($_POST["annee"], $_POST["mois"], $_POST["jour"])) {
            $_POST["date_naissance"] = sprintf("%s-%s-%s", $_POST["annee"], $_POST["mois"], $_POST["jour"]);
            unset($_POST["jour"], $_POST["annee"], $_POST["mois"]);
        }
    }
}